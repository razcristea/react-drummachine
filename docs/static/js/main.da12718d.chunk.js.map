{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["drumm","id","name","url","App","handleClick","bind","componentDidMount","componentWillUnmount","event","sound","document","getElementById","innerText","target","soundClip","currentTime","play","addEventListener","e","letters","keyPressed","key","toLowerCase","nameOfKey","indexOf","includes","classList","add","toUpperCase","remove","removeEventListener","className","onClick","this","src","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAGMA,G,MAAQ,CACZ,CACEC,GAAI,IACJC,KAAM,OACNC,IAAK,8DAEP,CACEF,GAAI,IACJC,KAAM,QACNC,IAAK,2DAEP,CACEF,GAAI,IACJC,KAAM,SACNC,IAAK,mEAEP,CACEF,GAAI,IACJC,KAAM,QACNC,IAAK,2DAEP,CACEF,GAAI,IACJC,KAAM,aACNC,IAAK,gEAEP,CACEF,GAAI,IACJC,KAAM,SACNC,IAAK,4DAEP,CACEF,GAAI,IACJC,KAAM,OACNC,IAAK,4DAEP,CACEF,GAAI,IACJC,KAAM,aACNC,IAAK,8DAEP,CACEF,GAAI,IACJC,KAAM,cACNC,IAAK,mEAoGMC,E,YA7Fb,aAAe,IAAD,8BACZ,+CAEKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,qBAAuB,EAAKA,qBAAqBF,KAA1B,gBALhB,E,yEAQFG,EAAOC,GACjBC,SAASC,eAAe,WAAWC,UAAYJ,EAAMK,OAAOb,GAC5D,IAAMc,EAAYJ,SAASC,eAAeH,EAAMK,OAAOD,WACvDE,EAAUC,YAAc,EACxBD,EAAUE,S,0CAIVN,SAASO,iBAAiB,WAAW,SAACC,GACpC,IAAMC,EAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7CC,EAAaF,EAAEG,IAAIC,cACnBC,EAAYxB,EAAMoB,EAAQK,QAAQJ,IAAtB,KAChB,GAAID,EAAQM,SAASL,GAAa,CAChCV,SAASC,eAAe,WAAWC,UAAYW,EAC/Cb,SAASC,eAAeY,GAAWG,UAAUC,IAAI,WACjD,IAAMb,EAAYJ,SAASC,eAAeS,EAAWQ,eACrDd,EAAUC,YAAc,EACxBD,EAAUE,WAIdN,SAASO,iBAAiB,SAAS,SAACC,GAClC,IAAMC,EAAU,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7CC,EAAaF,EAAEG,IAAIC,cACnBC,EAAYxB,EAAMoB,EAAQK,QAAQJ,IAAtB,KACZD,EAAQM,SAASL,IACnBV,SAASC,eAAeY,GAAWG,UAAUG,OAAO,gB,6CAMxDnB,SAASoB,oBAAoB,WAC7BpB,SAASoB,oBAAoB,W,+BAM7B,OACE,yBAAK9B,GAAG,gBACN,yBAAKA,GAAG,YACR,yBAAK+B,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,IAEH,yBAAKgC,UAAU,WAAWC,QAASC,KAAK7B,YAAaJ,GAAID,EAAM,GAAN,MACvD,2BAAOgC,UAAU,OAAOG,IAAKnC,EAAM,GAAN,IAAiBC,GAAID,EAAM,GAAN,KACjDA,EAAM,GAAN,S,GArFOoC,IAAMC,WCzCJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASjC,SAASC,eAAe,SD2H3C,kBAAmBiC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.da12718d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst drumm = [\n  {\n    id: \"Q\",\n    name: \"Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n  },\n  {\n    id: \"W\",\n    name: \"Chord\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\n  },\n  {\n    id: \"E\",\n    name: \"Shaker\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n  },\n  {\n    id: \"A\",\n    name: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\n  },\n  {\n    id: \"S\",\n    name: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\n  },\n  {\n    id: \"D\",\n    name: \"Heater\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n  },\n  {\n    id: \"Z\",\n    name: \"Clap\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n  },\n  {\n    id: \"X\",\n    name: \"Kick'n'Hat\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n  },\n  {\n    id: \"C\",\n    name: \"Punchy Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\n  }\n];\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    \n    this.handleClick = this.handleClick.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.componentWillUnmount = this.componentWillUnmount.bind(this)\n  }\n  \n  handleClick(event, sound) {  \n    document.getElementById(\"display\").innerText = event.target.id;\n    const soundClip = document.getElementById(event.target.innerText);\n    soundClip.currentTime = 0;\n    soundClip.play(); \n  }\n  \n  componentDidMount(){\n    document.addEventListener(\"keydown\", (e)=>{\n      const letters = ['q','w','e','a','s','d','z','x','c']\n      let keyPressed = e.key.toLowerCase()\n      let nameOfKey = drumm[letters.indexOf(keyPressed)]['name']\n      if (letters.includes(keyPressed)) {\n        document.getElementById(\"display\").innerText = nameOfKey\n        document.getElementById(nameOfKey).classList.add(\"pressed\")\n        const soundClip = document.getElementById(keyPressed.toUpperCase())\n        soundClip.currentTime = 0;\n        soundClip.play();\n      }\n    })\n    // Later edit: added 'pressed' class on keydown & added keyup to remove it\n    document.addEventListener(\"keyup\", (e)=>{\n      const letters = ['q','w','e','a','s','d','z','x','c']\n      let keyPressed = e.key.toLowerCase()\n      let nameOfKey = drumm[letters.indexOf(keyPressed)]['name']\n      if (letters.includes(keyPressed)) {\n        document.getElementById(nameOfKey).classList.remove('pressed')\n      }\n    })\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\")\n    document.removeEventListener(\"keyup\")\n  }\n  \n  \n//had to implement it like that because drumm.map() just wouldn't work :( \n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <div id=\"display\" />\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[0][\"name\"]}>\n          <audio className=\"clip\" src={drumm[0][\"url\"]} id={drumm[0][\"id\"]} />\n          {drumm[0][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[1][\"name\"]}>\n          <audio className=\"clip\" src={drumm[1][\"url\"]} id={drumm[1][\"id\"]} />\n          {drumm[1][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[2][\"name\"]}>\n          <audio className=\"clip\" src={drumm[2][\"url\"]} id={drumm[2][\"id\"]} />\n          {drumm[2][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[3][\"name\"]}>\n          <audio className=\"clip\" src={drumm[3][\"url\"]} id={drumm[3][\"id\"]} />\n          {drumm[3][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[4][\"name\"]}>\n          <audio className=\"clip\" src={drumm[4][\"url\"]} id={drumm[4][\"id\"]} />\n          {drumm[4][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[5][\"name\"]}>\n          <audio className=\"clip\" src={drumm[5][\"url\"]} id={drumm[5][\"id\"]} />\n          {drumm[5][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[6][\"name\"]}>\n          <audio className=\"clip\" src={drumm[6][\"url\"]} id={drumm[6][\"id\"]} />\n          {drumm[6][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[7][\"name\"]}>\n          <audio className=\"clip\" src={drumm[7][\"url\"]} id={drumm[7][\"id\"]} />\n          {drumm[7][\"id\"]}\n        </div>\n        <div className=\"drum-pad\" onClick={this.handleClick} id={drumm[8][\"name\"]}>\n          <audio className=\"clip\" src={drumm[8][\"url\"]} id={drumm[8][\"id\"]} />\n          {drumm[8][\"id\"]}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}